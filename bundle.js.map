{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/filter.js","webpack:///./src/mock/task.js","webpack:///./src/utils.js","webpack:///./src/view/board.js","webpack:///./src/view/filter.js","webpack:///./src/view/load-more-button.js","webpack:///./src/view/no-task.js","webpack:///./src/view/site-menu.js","webpack:///./src/view/sort.js","webpack:///./src/view/task-edit.js","webpack:///./src/view/task-list.js","webpack:///./src/view/task.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACO;;;;;;;;;;;;;ACDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACL;AACF;AACF;AACS;AACA;AACT;AACK;AACiB;AAChB;AACI;AACE;;AAE/C;AACA;AACA;;AAEA,gDAAgD,uDAAY;AAC5D,gBAAgB,oEAAc;;AAE9B;AACA;;AAEA;AACA,4BAA4B,kDAAQ;AACpC,gCAAgC,uDAAY;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,sDAAM,8CAA8C,sDAAc;AACpE;;AAEA;AACA,6BAA6B,mDAAS;AACtC,gCAAgC,uDAAY;;AAE5C,EAAE,sDAAM,8CAA8C,sDAAc;;AAEpE;AACA,IAAI,sDAAM,kCAAkC,qDAAU,iBAAiB,sDAAc;AACrF;AACA;;AAEA,EAAE,sDAAM,kCAAkC,kDAAQ,iBAAiB,sDAAc;AACjF,EAAE,sDAAM,8DAA8D,sDAAc;;AAEpF;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,8DAAkB;AAC1D,IAAI,sDAAM,oEAAoE,sDAAc;;AAE5F;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,sDAAM,qBAAqB,uDAAY,iBAAiB,sDAAc;AACtE,sDAAM,mBAAmB,oDAAU,wBAAwB,sDAAc;AACzE;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAa;AACnC;AACA;AACA,sBAAsB,kEAAmB;AACzC;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAe;AACrC;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAA0C;AACV;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,+DAAgB;;AAEtC;AACA;;AAEA;AACA;AACA,yBAAyB,+DAAgB;;AAEzC;AACA;AACA;;AAEA;AACA,kBAAkB,+DAAgB;AAClC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAgB;AAChC;AACA,gBAAgB,+DAAgB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAgB,IAAI,6CAAM;;AAEhD,SAAS,6CAAM;AACf;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAgB;AACvC,wBAAwB,+DAAgB;AACxC;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP,mDAAmD;AACnD,kCAAkC;;AAElC,+BAA+B;AAC/B;;AAEA;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;AACO;AACP,0CAA0C,8BAA8B;AACxE;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAuC;;AAEvC;AACA,SAAS,YAAY;;AAErB;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA,0BAA0B,KAAK;AAC/B,QAAQ,KAAK,wBAAwB,KAAK,UAAU,MAAM;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAA4F;AAC5D;;AAEhC;AACA,SAAS,6CAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,gCAAgC;AAC9E;;AAEA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAmB,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,8DAAe,2BAA2B;AAC3F;;AAEA,MAAM,8DAAe;AACrB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA,uBAAuB,IAAI;AAC3B,gBAAgB;AAChB;AACA,0DAA0D,IAAI,IAAI,IAAI;AACtE;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,SAAS,6CAAM;AACf;AACA;AACA,kBAAkB,MAAM;AACxB,oDAAoD,MAAM;AAC1D;AACA,eAAe,MAAM;AACrB,QAAQ;AACR;AACA;AACA,mBAAmB,MAAM;AACzB,wCAAwC,MAAM;AAC9C,SAAS,MAAM;AACf;AACA;AACA;;AAEA;AACA;AACA,SAAS,uCAAuC;;AAEhD,4BAA4B,4DAAa;AACzC;AACA;;AAEA,6BAA6B,8DAAe;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM,GAAG,kBAAkB,GAAG,mBAAmB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAA4F;;AAE5F;AACA;AACA,SAAS,8DAA8D;;AAEvE;AACA,MAAM,kEAAmB;AACzB;;AAEA,4BAA4B,4DAAa;AACzC;AACA;;AAEA,0BAA0B,8DAAe;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,MAAM,GAAG,kBAAkB,GAAG,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,YAAY;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","// Цвета заложеные в проект\nexport const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];\n","import SiteMenuView from './view/site-menu';\nimport FilterView from './view/filter';\nimport BoardView from './view/board';\nimport SortView from './view/sort';\nimport TaskListView from './view/task-list';\nimport TaskEditView from './view/task-edit';\nimport TaskView from './view/task';\nimport NoTaskView from './view/no-task';\nimport LoadMoreButtonView from './view/load-more-button';\nimport {generateTask} from './mock/task';\nimport {generateFilter} from './mock/filter';\nimport {render, RenderPosition} from './utils';\n\n// Константа количества карточек заданий\nconst TASK_AMOUNT = 22;\nconst TASK_AMOUNT_PER_STEP = 8;\n\nconst tasks = new Array(TASK_AMOUNT).fill().map(generateTask);\nconst filters = generateFilter(tasks);\n\nconst siteMainNode = document.querySelector(`.main`);\nconst siteHeaderNode = siteMainNode.querySelector(`.main__control`);\n\nconst renderTask = (taskListElement, task) => {\n  const taskComponent = new TaskView(task);\n  const taskEditComponent = new TaskEditView(task);\n\n  const replaceCardToForm = () => {\n    taskListElement.replaceChild(taskEditComponent.getElement(), taskComponent.getElement());\n  };\n\n  const replaceFormToCard = () => {\n    taskListElement.replaceChild(taskComponent.getElement(), taskEditComponent.getElement());\n  };\n\n  const onEscKeyDown = (evt) => {\n    if (evt.key === `Escape` || evt.key === `Esc`) {\n      evt.preventDefault();\n      replaceFormToCard();\n      document.removeEventListener(`keydown`, onEscKeyDown);\n    }\n  };\n\n  taskComponent.getElement().querySelector(`.card__btn--edit`).addEventListener(`click`, () => {\n    replaceCardToForm();\n    document.addEventListener(`keydown`, onEscKeyDown);\n  });\n\n  taskEditComponent.getElement().querySelector(`form`).addEventListener(`submit`, (evt) => {\n    evt.preventDefault();\n    replaceFormToCard();\n    document.removeEventListener(`keydown`, onEscKeyDown);\n  });\n\n  render(taskListElement, taskComponent.getElement(), RenderPosition.BEFOREEND);\n};\n\nconst renderBoard = (boardContainer, boardTasks) => {\n  const boardComponent = new BoardView();\n  const taskListComponent = new TaskListView();\n\n  render(boardContainer, boardComponent.getElement(), RenderPosition.BEFOREEND);\n\n  if (boardTasks.every((task) => task.isArchive)) {\n    render(boardComponent.getElement(), new NoTaskView().getElement(), RenderPosition.BEFOREEND);\n    return;\n  }\n\n  render(boardComponent.getElement(), new SortView().getElement(), RenderPosition.AFTERBEGIN);\n  render(boardComponent.getElement(), taskListComponent.getElement(), RenderPosition.BEFOREEND);\n\n  boardTasks\n    .slice(0, Math.min(boardTasks.length, TASK_AMOUNT_PER_STEP))\n    .forEach((task) => renderTask(taskListComponent.getElement(), task));\n\n  if (boardTasks.length > TASK_AMOUNT_PER_STEP) {\n    let renderedTasksCount = TASK_AMOUNT_PER_STEP;\n\n    const loadMoreButtonComponent = new LoadMoreButtonView();\n    render(boardComponent.getElement(), loadMoreButtonComponent.getElement(), RenderPosition.BEFOREEND);\n\n    loadMoreButtonComponent.getElement().addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n\n      boardTasks\n        .slice(renderedTasksCount, renderedTasksCount + TASK_AMOUNT_PER_STEP)\n        .forEach((task) => renderTask(taskListComponent.getElement(), task));\n\n      renderedTasksCount += TASK_AMOUNT_PER_STEP;\n\n      if (renderedTasksCount >= boardTasks.length) {\n        loadMoreButtonComponent.getElement().remove();\n        loadMoreButtonComponent.removeElement();\n      }\n    });\n  }\n};\n\nrender(siteHeaderNode, new SiteMenuView().getElement(), RenderPosition.BEFOREEND);\nrender(siteMainNode, new FilterView(filters).getElement(), RenderPosition.BEFOREEND);\nrenderBoard(siteMainNode, tasks);\n","import {isTaskExpired, isTaskRepeating, isTaskExpiringToday} from '../utils';\n\n// Мапа где ключи - названия фильтров, а значения - функции-счетчики\nconst taskToFilterMap = {\n  all: (tasks) => tasks.filter((task) => !task.isArchive).length,\n  overdue: (tasks) => tasks\n    .filter((task) => !task.isArchive)\n    .filter((task) => isTaskExpired(task.dueDate)).length,\n  today: (tasks) => tasks\n    .filter((task) => !task.isArchive)\n    .filter((task) => isTaskExpiringToday(task.dueDate)).length,\n  favorites: (tasks) => tasks\n    .filter((task) => !task.isArchive)\n    .filter((task) => task.isFavorite).length,\n  repeating: (tasks) => tasks\n    .filter((task) => !task.isArchive)\n    .filter((task) => isTaskRepeating(task.repeating)).length,\n  archive: (tasks) => tasks.filter((task) => task.isArchive).length,\n};\n\n// Функция-генератор фильтров\nexport const generateFilter = (tasks) => {\n  return Object.entries(taskToFilterMap).map(([filterName, countTasks]) => {\n    return {\n      name: filterName,\n      count: countTasks(tasks),\n    };\n  });\n};\n","import {getRandomInteger} from '../utils';\nimport {COLORS} from '../const';\n\n// Функция генерации описания задачи случайным образом\nconst generateDescription = () => {\n  const descriptions = [\n    `Изучить теорию`,\n    `Сделать домашку`,\n    `Пройти интенсив на соточку`,\n  ];\n\n  const randomIndex = getRandomInteger(0, descriptions.length - 1);\n\n  return descriptions[randomIndex];\n};\n\n// Функция для генерации даты. По заданию это либо null, либо дата плюс-минус неделя от текущей\nconst generateDate = () => {\n  const isDate = Boolean(getRandomInteger(0, 1));\n\n  if (!isDate) {\n    return null;\n  }\n\n  const maxDaysGap = 7;\n  const daysGap = getRandomInteger(-maxDaysGap, maxDaysGap);\n  const currentDate = new Date();\n\n  currentDate.setHours(23, 59, 59, 999);\n  currentDate.setDate(currentDate.getDate() + daysGap);\n\n  return new Date(currentDate);\n};\n\n// Функция для генерации дней повторения (будем выбирать случайно из двух)\nconst generateRepeatingDays = () => {\n  return {\n    mo: false,\n    tu: false,\n    we: Boolean(getRandomInteger(0, 1)),\n    th: false,\n    fr: Boolean(getRandomInteger(0, 1)),\n    sa: false,\n    su: false\n  };\n};\n\n// Функция-генератор случайного цвета\nconst getRandomColor = () => {\n  const randomIndex = getRandomInteger(0, COLORS.length - 1);\n\n  return COLORS[randomIndex];\n};\n\n// Функция-генератор карточки задания\nexport const generateTask = () => {\n  const dueDate = generateDate();\n  const repeating = dueDate === null\n    ? generateRepeatingDays()\n    : {\n      mo: false,\n      tu: false,\n      we: false,\n      th: false,\n      fr: false,\n      sa: false,\n      su: false\n    };\n\n  return {\n    description: generateDescription(),\n    dueDate,\n    repeating,\n    color: getRandomColor(),\n    isArchive: Boolean(getRandomInteger(0, 1)),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n  };\n};\n","export const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n};\n\n// Render-функцию для отрисовки элемента\nexport const render = (container, element, place) => {\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n\n// Функция отрисовки элемента в контейнер\nexport const renderTemplate = (container, element, place = `beforeend`) => {\n  container.insertAdjacentHTML(place, element);\n};\n\n// Принцип работы прост:\n// 1. создаём пустой div-блок\n// 2. берём HTML в виде строки и вкладываем в этот div-блок, превращая в DOM-элемент\n// 3. возвращаем этот DOM-элемент\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`); // 1\n  newElement.innerHTML = template; // 2\n\n  return newElement.firstChild; // 3\n};\n\n// Функция из интернета по генерации случайного числа из диапазона\nexport const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\n// Функция получения текущей даты\nconst getCurrentDate = () => {\n  const currentDate = new Date();\n  currentDate.setHours(23, 59, 59, 999);\n  return new Date(currentDate);\n};\n\n// Функция проверки просрочена ли задача\nexport const isTaskExpired = (dueDate) => {\n  if (dueDate === null) {\n    return false;\n  }\n\n  const currentDate = getCurrentDate();\n  return currentDate.getTime() > dueDate.getTime();\n};\n\n// Функция проверки есть ли задачи на сегодня\nexport const isTaskExpiringToday = (dueDate) => {\n  if (dueDate === null) {\n    return false;\n  }\n\n  const currentDate = getCurrentDate();\n  return currentDate.getTime() === dueDate.getTime();\n};\n\n// Функция проверки на повторяющиеся дни в задаче\nexport const isTaskRepeating = (repeating) => {\n  return Object.values(repeating).some(Boolean);\n};\n\n// Функция перевода даты в понятную строку\nexport const humanizeTaskDueDate = (dueDate) => {\n  return dueDate.toLocaleString(`en-US`, {day: `numeric`, month: `long`});\n};\n","import {createElement} from '../utils';\n\nconst createBoardTemplate = () => {\n  return (\n    `<section class=\"board container\"></section>`\n  );\n};\n\nexport default class Board {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createBoardTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from '../utils';\n\nconst createFilterItemTemplate = (filter, isChecked) => {\n  const {name, count} = filter;\n\n  return (`\n    <input\n      type=\"radio\"\n      id=\"filter__${name}\"\n      class=\"filter__input visually-hidden\"\n      name=\"filter\"\n      ${isChecked ? `checked` : ``}\n      ${count === 0 ? `disabled` : ``}\n    />\n    <label for=\"filter__${name}\" class=\"filter__label\">\n      ${name} <span class=\"filter__${name}-count\">${count}</span>\n    </label>\n  `);\n};\n\n// Функция создания шаблона фильтров\nconst createFilterTemplate = (filterItems) => {\n  const filterItemsTemplate = filterItems\n    .map((filter, index) => createFilterItemTemplate(filter, index === 0))\n    .join(``);\n\n  return (\n    `<section class=\"main__filter filter container\">\n      ${filterItemsTemplate}\n    </section>`\n  );\n};\n\nexport default class Filter {\n  constructor(filters) {\n    this._filters = filters;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createFilterTemplate(this._filters);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from '../utils';\n\nconst createLoadMoreButtonTemplate = () => {\n  return (\n    `<button class=\"load-more\" type=\"button\">load more</button>`\n  );\n};\n\nexport default class LoadMoreButton {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createLoadMoreButtonTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from '../utils';\n\nconst createNoTaskTemplate = () => {\n  return (\n    `<p class=\"board__no-tasks\">\n      Click «ADD NEW TASK» in menu to create your first task\n    </p>`\n  );\n};\n\nexport default class NoTask {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createNoTaskTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from '../utils';\n\n// Функция создания шаблона меню сайта\nconst createSiteMenuTemplate = () => {\n  return (\n    `<section class=\"control__btn-wrap\">\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__new-task\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n        >+ ADD NEW TASK</label\n      >\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__task\"\n        class=\"control__input visually-hidden\"\n        checked\n      />\n      <label for=\"control__task\" class=\"control__label\">TASKS</label>\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__statistic\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__statistic\" class=\"control__label\"\n        >STATISTICS</label\n      >\n    </section>`\n  );\n};\n\nexport default class SiteMenu {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createSiteMenuTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst createSortTemplate = () => {\n  return (\n    `<div class=\"board__filter-list\">\n      <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n      <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n      <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n    </div>`\n  );\n};\n\nexport default class Sort {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {isTaskExpired, isTaskRepeating, humanizeTaskDueDate, createElement} from '../utils';\nimport {COLORS} from '../const';\n\nconst BLANK_TASK = {\n  color: COLORS[0],\n  description: ``,\n  dueDate: null,\n  repeating: {\n    mo: false,\n    tu: false,\n    we: false,\n    th: false,\n    fr: false,\n    sa: false,\n    su: false,\n  },\n  isArchive: false,\n  isFavorite: false,\n};\n\n// Функция создания шаблона с выбором даты\nconst createEditTaskDateTemplate = (dueDate) => {\n  return (\n    `<button class=\"card__date-deadline-toggle\" type=\"button\">\n      date: <span class=\"card__date-status\">${dueDate === null ? `no` : `yes`}</span>\n    </button>\n\n    ${dueDate !== null\n      ? `<fieldset class=\"card__date-deadline\">\n          <label class=\"card__input-deadline-wrap\">\n            <input\n              class=\"card__date\"\n              type=\"text\"\n              placeholder=\"\"\n              name=\"date\"\n              value=\"${humanizeTaskDueDate(dueDate)}\"\n            />\n          </label>\n        </fieldset>`\n      : ``}\n  `);\n};\n\n// Функция создания шаблона с выбором дня повторения\nconst createEditTaskRepeatingTemplate = (repeating) => {\n  return (`\n    <button class=\"card__repeat-toggle\" type=\"button\">\n      repeat:<span class=\"card__repeat-status\">${isTaskRepeating(repeating) ? `yes` : `no`}</span>\n    </button>\n\n    ${isTaskRepeating(repeating)\n      ? `<fieldset class=\"card__repeat-days\">\n          <div class=\"card__repeat-days-inner\">\n          ${Object.entries(repeating).map(([day, repeat]) => `\n            <input\n              class=\"visually-hidden card__repeat-day-input\"\n              type=\"checkbox\"\n              id=\"repeat-${day}\"\n              name=\"repeat\"\n              value=\"${day}\"\n              ${repeat ? `checked` : ``}\n            />\n            <label class=\"card__repeat-day\" for=\"repeat-${day}\">${day}</label>\n          `).join(``)}\n          </div>\n        </fieldset>`\n      : ``}`\n  );\n};\n\n// Функция создания шаблона с выбором цвета\nconst createEditTaskColorsTemplate = (currentColor) => {\n  return COLORS.map((color) => `\n    <input\n      type=\"radio\"\n      id=\"color-${color}\"\n      class=\"card__color-input card__color-input--${color} visually-hidden\"\n      name=\"color\"\n      value=\"${color}\"\n      ${currentColor === color ? `checked` : ``}\n    />\n    <label\n      for=\"color-${color}\"\n      class=\"card__color card__color--${color}\"\n      >${color}</label\n    >\n  `).join(``);\n};\n\n// Функция создания шаблона редактирования карточки задания\nconst createEditTaskTemplate = (task) => {\n  const {color, description, dueDate, repeating} = task;\n\n  const deadlineClassName = isTaskExpired(dueDate)\n    ? `card--deadline`\n    : ``;\n\n  const repeatingClassName = isTaskRepeating(repeating)\n    ? `card--repeat`\n    : ``;\n\n  const dateTemplate = createEditTaskDateTemplate(dueDate);\n  const repeatingTemplate = createEditTaskRepeatingTemplate(repeating);\n  const colorsTemplate = createEditTaskColorsTemplate(color);\n\n  return (\n    `<article class=\"card card--edit card--${color} ${deadlineClassName} ${repeatingClassName}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <label>\n              <textarea\n                class=\"card__text\"\n                placeholder=\"Start typing your text here...\"\n                name=\"text\"\n              >${description}</textarea>\n            </label>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                ${dateTemplate}\n                ${repeatingTemplate}\n              </div>\n            </div>\n\n            <div class=\"card__colors-inner\">\n              <h3 class=\"card__colors-title\">Color</h3>\n              <div class=\"card__colors-wrap\">\n                ${colorsTemplate}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card__status-btns\">\n            <button class=\"card__save\" type=\"submit\">save</button>\n            <button class=\"card__delete\" type=\"button\">delete</button>\n          </div>\n        </div>\n      </form>\n    </article>`\n  );\n};\n\nexport default class TaskEdit {\n  constructor(task) {\n    this._task = task || BLANK_TASK;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createEditTaskTemplate(this._task);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from '../utils';\n\nconst createTaskListTemplate = () => {\n  return `<div class=\"board__tasks\"></div>`;\n};\n\nexport default class TaskList {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTaskListTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {isTaskExpired, isTaskRepeating, humanizeTaskDueDate, createElement} from '../utils';\n\n// Функция создания шаблона карточки задания\nconst createTaskCardTemplate = (task) => {\n  const {color, description, dueDate, repeating, isArchive, isFavorite} = task;\n\n  const date = dueDate !== null\n    ? humanizeTaskDueDate(dueDate)\n    : ``;\n\n  const deadlineClassName = isTaskExpired(dueDate)\n    ? `card--deadline`\n    : ``;\n\n  const repeatClassName = isTaskRepeating(repeating)\n    ? `card--repeat`\n    : ``;\n\n  const archiveClassName = isArchive\n    ? `card__btn--archive card__btn--disabled`\n    : `card__btn--archive`;\n\n  const favoriteClassName = isFavorite\n    ? `card__btn--favorites card__btn--disabled`\n    : `card__btn--favorites`;\n\n  return (\n    `<article class=\"card card--${color} ${deadlineClassName} ${repeatClassName}\">\n      <div class=\"card__form\">\n        <div class=\"card__inner\">\n          <div class=\"card__control\">\n            <button type=\"button\" class=\"card__btn card__btn--edit\">\n              edit\n            </button>\n            <button type=\"button\" class=\"card__btn ${archiveClassName}\">\n              archive\n            </button>\n            <button\n              type=\"button\"\n              class=\"card__btn ${favoriteClassName}\"\n            >\n              favorites\n            </button>\n          </div>\n\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <p class=\"card__text\">${description}</p>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <div class=\"card__date-deadline\">\n                  <p class=\"card__input-deadline-wrap\">\n                    <span class=\"card__date\">${date}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </article>`\n  );\n};\n\nexport default class Task {\n  constructor(task) {\n    this._task = task;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTaskCardTemplate(this._task);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n"],"sourceRoot":""}